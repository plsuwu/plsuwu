import{s as ge,n as Y}from"./scheduler.rijuCTql.js";import{S as Ce,i as ye,g as s,s as p,H as we,h as l,I as i,c as o,j as Te,z as Ee,f as t,k as Le,a}from"./index.7JfBVtF2.js";function Me(Ae){let c,ee="Rock, Paper, Psychic",H,r,ne="üëª Wanna play a game of rock, paper, scissors against a computer that can read your mind? Sounds fun, right?",F,d,te="We are presented with a <code>.7z</code> file containing an<code>.exe</code> binary. After extracting, I tried a few simple classics (buffer overflow/format string stuff) - though nothing wound up sticking.",P,u,ae="Loading the binary into IDA, we are able to perform a quick search for the term <code>flag</code> and make a quick note of any functions or subroutines:",B,b,se='<img src="/img/rock_paper_psychic_img/Untitled.png" alt="Interesting functions"/>',j,m,le="Interesting functions",I,f,pe="Checking out our <code>printFlag</code> function, I‚Äôm not <em>entirely</em> sure what‚Äôs going on here (on account of the weird Nim machine code), but we can glean a bit of info regardless:",O,k,ie="<li>The program seems to have been written in Nim,</li> <li>The binary uses this function when a player wins to load a memory address (represented by the variable <code>TM__V45tF8B8NBcxFcjfe7lhBw_38</code>, which contains a string) into <code>$rcx</code> before running a <code>copyString</code> function on it<ul><li>This operation is run a second time, though on a different address (the string at <code>TM__V45tF8B8NBcxFcjfe7lhBw_39</code>).</li></ul></li> <li>The <code>fromRC4</code> function seems to be the recipient of these strings - my assumption is that we‚Äôre deciphering RC4-encrypted text, which will probably hold our flag.</li>",R,h,oe='<img src="/img/rock_paper_psychic_img/Untitled%201.png" alt="IDA graph view"/>',U,_,ce="IDA graph view",q,D,re='<img src="/img/rock_paper_psychic_img/Untitled%202.png" alt="Text view"/>',z,x,de="Text view",N,A,ue="The addresses of <code>TM__V45tF8B8NBcxFcjfe7lhBw_38</code> &amp; <code>TM__V45tF8B8NBcxFcjfe7lhBw_39</code> point to sequential sections in <code>.rdata</code>, and contain the following values respectively (note that each byte uses one <code>.rdata</code> address, so these were technically not represented like this in memory, though this is what we want to use for decryption):",Z,v,S,ve=`<code class="language-nasm"><span class="token label function">.rdata:</span>000000000041D9E0 TM__V45tF8B8NBcxFcjfe7lhBw_39 db  <span class="token number">4Ch</span> <span class="token comment">; L</span>
<span class="token label function">.rdata:</span>000000000041D9E0                                         <span class="token comment">; DATA XREF: printFlag__main_6+14‚Üëo</span>
<span class="token label function">.rdata:</span>000000000041D9E1                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E2                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E3                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E4                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E5                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E6                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E7                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9E8                 db  <span class="token number">4Ch</span> <span class="token comment">; L</span>
<span class="token label function">.rdata:</span>000000000041D9E9                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9EA                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9EB                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9EC                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9ED                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9EE                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041D9EF                 db  <span class="token number">40h</span> <span class="token comment">; @D1E2A0D9FA89CABED207EDF4F55C688E04EBE20F077351BDAA1E110D5A74805C916AF12F054C</span>
<span class="token label function">.rdata:</span> .....truncated addresses.....
<span class="token label function">.rdata:</span>000000000041DA3C                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA3D                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA3E                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA3F                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA40 TM__V45tF8B8NBcxFcjfe7lhBw_38 db  <span class="token number">50h</span> <span class="token comment">; P</span>
<span class="token label function">.rdata:</span>000000000041DA40                                         <span class="token comment">; DATA XREF: printFlag__main_6+8‚Üëo</span>
<span class="token label function">.rdata:</span>000000000041DA41                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA42                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA43                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA44                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA45                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA46                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA47                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA48                 db  <span class="token number">50h</span> <span class="token comment">; P</span>
<span class="token label function">.rdata:</span>000000000041DA49                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4A                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4B                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4C                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4D                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4E                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DA4F                 db  <span class="token number">40h</span> <span class="token comment">; @gnnhexnyjkwpaghynzfthadollhtrhballsdmhhnbjppewgjkhnlhspwjswqoxtgdykxrhwlabblekxj</span>
<span class="token label function">.rdata:</span> .....truncated addresses.....
<span class="token label function">.rdata:</span>000000000041DAA0                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA1                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA2                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA3                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA4                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA5                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA6                 db    <span class="token number">0</span>
<span class="token label function">.rdata:</span>000000000041DAA7                 db    <span class="token number">0</span></code>`,V,g,be="Our values used in the decryption process use the strings <code>P P @gnnhexnyjkwpaghynzfthadollhtrhballsdmhhnbjppewgjkhnlhspwjswqoxtgdykxrhwlabblekxj</code> and <code>L L @D1E2A0D9FA89CABED207EDF4F55C688E04EBE20F077351BDAA1E110D5A74805C916AF12F054C</code> to decipher and print a flag.",W,C,me="Digging a little into the RC4 decryption function, we will find some child functions necessary to understand how we should ultimately be performing a decryption:",K,y,fe="<li><code>genKeystream__OOZOnimbleZpkgsZ8267524548O49O48Z826752_2</code>,</li> <li><code>fromHex__OOZOnimbleZpkgsZ8267524548O49O48Z826752_83</code>.</li>",X,w,ke='<img src="/img/rock_paper_psychic_img/Untitled%203.png" alt="Untitled"/>',$,T,he='<img src="/img/rock_paper_psychic_img/Untitled%204.png" alt="Untitled"/>',G,E,_e="<code>genKeystream</code> seems to just utilize a plaintext value, and it is fairly safe to assume <code>fromHex</code> will convert a string from its hex representation to ASCII. My other assumption was that <code>fromRC4</code> uses the string prefixed with <code>P P @</code> as the ‚Äúpassphrase‚Äù/key, and the hexadecimal string labeled <code>L L @</code> as its encrypted input.",J,L,De="With these assumptions, we can discard the weirdness at the start of our cipher strings, and we can run this through Cyberchef‚Äôs RC4 decrypt function to get our flag:",Q,M,xe='<img src="/img/rock_paper_psychic_img/Untitled%205.png" alt="Untitled"/>';return{c(){c=s("h1"),c.textContent=ee,H=p(),r=s("aside"),r.textContent=ne,F=p(),d=s("p"),d.innerHTML=te,P=p(),u=s("p"),u.innerHTML=ae,B=p(),b=s("p"),b.innerHTML=se,j=p(),m=s("p"),m.textContent=le,I=p(),f=s("p"),f.innerHTML=pe,O=p(),k=s("ul"),k.innerHTML=ie,R=p(),h=s("p"),h.innerHTML=oe,U=p(),_=s("p"),_.textContent=ce,q=p(),D=s("p"),D.innerHTML=re,z=p(),x=s("p"),x.textContent=de,N=p(),A=s("p"),A.innerHTML=ue,Z=p(),v=s("pre"),S=new we(!1),V=p(),g=s("p"),g.innerHTML=be,W=p(),C=s("p"),C.textContent=me,K=p(),y=s("ul"),y.innerHTML=fe,X=p(),w=s("p"),w.innerHTML=ke,$=p(),T=s("p"),T.innerHTML=he,G=p(),E=s("p"),E.innerHTML=_e,J=p(),L=s("p"),L.textContent=De,Q=p(),M=s("p"),M.innerHTML=xe,this.h()},l(e){c=l(e,"H1",{"data-svelte-h":!0}),i(c)!=="svelte-cbcfwk"&&(c.textContent=ee),H=o(e),r=l(e,"ASIDE",{"data-svelte-h":!0}),i(r)!=="svelte-rff3uz"&&(r.textContent=ne),F=o(e),d=l(e,"P",{"data-svelte-h":!0}),i(d)!=="svelte-9qkt7x"&&(d.innerHTML=te),P=o(e),u=l(e,"P",{"data-svelte-h":!0}),i(u)!=="svelte-5udlac"&&(u.innerHTML=ae),B=o(e),b=l(e,"P",{"data-svelte-h":!0}),i(b)!=="svelte-1wnogtr"&&(b.innerHTML=se),j=o(e),m=l(e,"P",{"data-svelte-h":!0}),i(m)!=="svelte-ii144j"&&(m.textContent=le),I=o(e),f=l(e,"P",{"data-svelte-h":!0}),i(f)!=="svelte-dnryvy"&&(f.innerHTML=pe),O=o(e),k=l(e,"UL",{"data-svelte-h":!0}),i(k)!=="svelte-blemeo"&&(k.innerHTML=ie),R=o(e),h=l(e,"P",{"data-svelte-h":!0}),i(h)!=="svelte-2dr4fr"&&(h.innerHTML=oe),U=o(e),_=l(e,"P",{"data-svelte-h":!0}),i(_)!=="svelte-qzoedj"&&(_.textContent=ce),q=o(e),D=l(e,"P",{"data-svelte-h":!0}),i(D)!=="svelte-13cg4g5"&&(D.innerHTML=re),z=o(e),x=l(e,"P",{"data-svelte-h":!0}),i(x)!=="svelte-109i36g"&&(x.textContent=de),N=o(e),A=l(e,"P",{"data-svelte-h":!0}),i(A)!=="svelte-1f3ev6v"&&(A.innerHTML=ue),Z=o(e),v=l(e,"PRE",{class:!0});var n=Te(v);S=Ee(n,!1),n.forEach(t),V=o(e),g=l(e,"P",{"data-svelte-h":!0}),i(g)!=="svelte-nnxnvp"&&(g.innerHTML=be),W=o(e),C=l(e,"P",{"data-svelte-h":!0}),i(C)!=="svelte-jk3oqu"&&(C.textContent=me),K=o(e),y=l(e,"UL",{"data-svelte-h":!0}),i(y)!=="svelte-aq2yo3"&&(y.innerHTML=fe),X=o(e),w=l(e,"P",{"data-svelte-h":!0}),i(w)!=="svelte-1imzrpl"&&(w.innerHTML=ke),$=o(e),T=l(e,"P",{"data-svelte-h":!0}),i(T)!=="svelte-108bjom"&&(T.innerHTML=he),G=o(e),E=l(e,"P",{"data-svelte-h":!0}),i(E)!=="svelte-1j9zbgg"&&(E.innerHTML=_e),J=o(e),L=l(e,"P",{"data-svelte-h":!0}),i(L)!=="svelte-1233it9"&&(L.textContent=De),Q=o(e),M=l(e,"P",{"data-svelte-h":!0}),i(M)!=="svelte-1y9mxnj"&&(M.innerHTML=xe),this.h()},h(){S.a=null,Le(v,"class","language-nasm")},m(e,n){a(e,c,n),a(e,H,n),a(e,r,n),a(e,F,n),a(e,d,n),a(e,P,n),a(e,u,n),a(e,B,n),a(e,b,n),a(e,j,n),a(e,m,n),a(e,I,n),a(e,f,n),a(e,O,n),a(e,k,n),a(e,R,n),a(e,h,n),a(e,U,n),a(e,_,n),a(e,q,n),a(e,D,n),a(e,z,n),a(e,x,n),a(e,N,n),a(e,A,n),a(e,Z,n),a(e,v,n),S.m(ve,v),a(e,V,n),a(e,g,n),a(e,W,n),a(e,C,n),a(e,K,n),a(e,y,n),a(e,X,n),a(e,w,n),a(e,$,n),a(e,T,n),a(e,G,n),a(e,E,n),a(e,J,n),a(e,L,n),a(e,Q,n),a(e,M,n)},p:Y,i:Y,o:Y,d(e){e&&(t(c),t(H),t(r),t(F),t(d),t(P),t(u),t(B),t(b),t(j),t(m),t(I),t(f),t(O),t(k),t(R),t(h),t(U),t(_),t(q),t(D),t(z),t(x),t(N),t(A),t(Z),t(v),t(V),t(g),t(W),t(C),t(K),t(y),t(X),t(w),t($),t(T),t(G),t(E),t(J),t(L),t(Q),t(M))}}}const Pe={title:"Rock, Paper, Psychic",description:"Wanna play a game of rock, paper, scissors against a computer that can read your mind? Sounds fun, right?",author:"huntress",date:"2023-10-16",published:!0};class Be extends Ce{constructor(c){super(),ye(this,c,null,Me,ge,{})}}export{Be as default,Pe as metadata};
